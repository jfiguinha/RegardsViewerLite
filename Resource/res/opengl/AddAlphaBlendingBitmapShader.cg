uniform sampler2D textureScreen;
uniform sampler2D textureToAdd;
uniform float widthScreen;
uniform float heightScreen;
uniform float textureWidth;
uniform float textureHeight;
uniform float left;
uniform float top;

void main(void)
{			
	vec4 temp;														  	
	vec4 kernel[9];
	float posX = gl_TexCoord[0].s;
	float posY = gl_TexCoord[0].t;
	float texelSizeX = 1.0 / widthScreen; //size of one texel 
	float texelSizeY = 1.0 / heightScreen; //size of one texel 
	
	float leftPos = left * texelSizeX;
	float topPos = top * texelSizeY;
	float rightPos = (left+textureWidth) * texelSizeX;
	float bottomPos = (top+textureHeight) * texelSizeY;
	
	if(posX >= leftPos && posX < rightPos && posY >= topPos && posY < bottomPos)
	{
		vec4 src_color = texture2D(textureScreen, vec2(posX,posY));
		
		float x = (((posX - leftPos) * widthScreen) / textureWidth);
		float y = (((posY - topPos) * heightScreen) / textureHeight);
		
		vec4 add_color = texture2D(textureToAdd, vec2(x, y));
		
		float alpha = add_color.a;
		float alphaDiff = 1.0 - alpha;
		gl_FragColor = vec4(src_color.r * alphaDiff + add_color.r * alpha, src_color.g * alphaDiff + add_color.g * alpha, src_color.b * alphaDiff + add_color.b * alpha, 1.0);
	}
	else
	{
		gl_FragColor = texture2D(textureScreen, vec2(posX,posY));
	}
}