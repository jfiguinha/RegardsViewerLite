uniform uint vecKernel[4];
layout (binding=0, rgba8) writeonly uniform image2D destTex;
layout (binding=1, rgba8) readonly uniform image2D srcTex;

void main()
{
	ivec2 storePos = ivec2(gl_GlobalInvocationID.xy);
	uint x = gl_GlobalInvocationID.x;
	uint y = gl_GlobalInvocationID.y;
	if(x < vecKernel[0] && y < vecKernel[1])
	{
		uint destx = gl_GlobalInvocationID.x;
		uint desty = gl_GlobalInvocationID.y;
		uint srcx = desty;
		uint srcy = vecKernel[3] - destx;
		vec4 val = imageLoad(srcTex, ivec2(srcx,srcy));
		imageStore(destTex, storePos, val);
	}
}
