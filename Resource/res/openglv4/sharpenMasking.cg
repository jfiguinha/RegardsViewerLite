uniform uint vecKernel[4];
uniform uint sharpness;
layout (binding=0, rgba8) writeonly uniform image2D destTex;
layout (binding=1, rgba8) readonly uniform image2D srcTex;

void main (void)
{
	ivec2 storePos = ivec2(gl_GlobalInvocationID.xy);
	uint x = gl_GlobalInvocationID.x;
	uint y = gl_GlobalInvocationID.y;
	vec4 sum = vec4(0.0);
	if(x < vecKernel[0] && y < vecKernel[1])
	{
		data = imageLoad(srcTex, ivec2(x, y));
		sum += imageLoad(srcTex, ivec2(x - 1.0,y - 1.0));
		sum += imageLoad(srcTex, ivec2(x + 1.0,y - 1.0));
		sum += imageLoad(srcTex, ivec2(x - 1.0,y + 1.0));
		sum += imageLoad(srcTex, ivec2(x + 1.0,y + 1.0));
		vec4 blur = (sum + data) / 5;
		vec4 color = data + (data - blur) * sharpness;
		imageStore(destTex, storePos, color);
	}
}
